@page
@model RazorFrontendApp.Pages.QuotesModel
@using System.Text
@{
    ViewData["title"] = "Quotes";
}
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@attribute [IgnoreAntiforgeryToken]

<section id="address">
    <div class="d-flex flex-row gap-2 align-items-center">
        <h1 class="display-5 fw-normal">@ViewData["title"]</h1>
        <div>
            <a class="d-block btn-svg svg-add" style="width: 36px; height: 36px;" data-tooltip="Add new quote"
               data-bs-toggle="modal" data-bs-target="#editModal" data-bs-action="Add">
                <svg style="width: 36px; height: 36px;">
                    <use xlink:href="#svg-add" href="#svg-add"></use>
                </svg>
            </a>
        </div>
    </div>
    

    @if (Model.UpdateMessages.Any())
    {
        <div class="d-flex flex-column justify-content-between alert alert-success" role="alert">
            <div class="d-flex flex-row justify-content-between">
                <h2 class="alert-heading">Updates:</h2>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
            @foreach (string msg in Model.UpdateMessages)
            {
                <div class="mx-3 d-flex flex-row justify-content-between alert alert-light" role="alert">
                    <div class="d-flex flex-row justify-content-start gap-2">
                        <svg width="24" height="24"><use xlink:href="#svg-check" href="#svg-check"></use></svg>
                        @msg
                    </div>
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
        </div>
    }

    @if (Model.ErrorMessages.Any())
    {
        <div class="d-flex flex-column justify-content-between alert alert-danger" role="alert">
            <div class="d-flex flex-row justify-content-between">
                <h2 class="alert-heading">Errors:</h2>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
            @foreach (string msg in Model.ErrorMessages)
            {
                <div class="mx-3 d-flex flex-row justify-content-between alert alert-dark" role="alert">
                    <div class="d-flex flex-row justify-content-start gap-2">
                        <svg width="24" height="24"><use xlink:href="#svg-alert" href="#svg-alert"></use></svg>
                        @msg
                    </div>
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
        </div>
    }

    <div class="d-flex flex-column align-items-end mt-3">
        @{
            QuoteCounter();
        }
    </div>

    <div class="d-flex flex-row justify-content-between align-items-center gap-2 mb-3">
        <form method="get" class="d-flex flex-row gap-2 flex-grow-1">
            <div class="d-flex flex-column justify-content-center">
                <label class="form-check-label" for="Seeded">
                    Seeded:
                    <span class="d-flex flex-row justify-content-center form-check form-switch" data-tooltip="@(Model.Seeded ? "Seeded" : "Not seeded")">
                        <input type="checkbox" id="Seeded" class="form-check-input" onchange="this.form.submit();"
                            name="seeded" checked="@(Model.Seeded ? "checked" : null)"  value="true">
                    </span>
                </label>
            </div>
            <div class="d-flex flex-row align-items-center flex-grow-1">
                <div class="list-bar" data-tooltip="Filter the results quote text or author. Press enter to submit.">
                    <input type="text" placeholder="Text filter" name="filter" asp-for="Filter" />
                </div>
            </div>
            <div class="d-flex flex-row align-items-center flex-grow-0">
                <div class="list-bar" data-tooltip="The number of quotes per page.">
                    <select asp-items="Model.PageSizes" name="pageSize" asp-for="PageSize" onchange="this.form.submit();"></select>
                </div>
            </div>
        </form>

        @{
            Pagination();
        }
    </div>

    <form method="post">
        <div class="item-selection">
            <div>
                @if (Model.Quotes is not null)
                    @foreach (var quote in Model.Quotes)
                    {
                        <label class="d-flex flex-column">
                            <button type="button" required class="bg-transparent border-0 m-0"
                                    data-bs-toggle="modal" data-bs-target="#editModal"
                                    data-bs-id="@quote.QuoteId" data-bs-quote="@quote.Quote" data-bs-author="@quote.Author"
                                    data-bs-action="Update">
                                <div class="text-start" style="white-space: pre-line;">"@quote.Quote"</div>
                                <div class="text-end">@quote.Author</div>
                            </button>
                            <!-- Edit through modal -->
                        </label>
                    }
            </div>
        </div>

        <div class="d-flex flex-column align-items-end mt-3">
            @{
                Pagination();
                QuoteCounter();
            }
        </div>
    </form>
</section>


<!-- Modal -->
<div class="modal fade text-black" id="editModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Edit quote</h5>
            </div>
            <form method="post" asp-page-handler="Save">
                <input type="hidden" asp-for="Seeded" />
                <input type="hidden" asp-for="Filter" />
                <input type="hidden" asp-for="PageSize" />
                <input type="hidden" asp-for="CurrentPage" />

                <input type="hidden" asp-for="Quote.QuoteId" />
                <div class="modal-body">
                    <div>
                        <label for="Quote_Quote" class="w-100 form-label">Quote:</label>
                        <textarea required placeholder="Quote" asp-for="Quote.Quote" class="form-control"></textarea>
                        <span asp-validation-for="Quote.Quote" class="invalid-feedback text-outline-black"></span>
                    </div>
                    <div>
                        <label for="Quote_Author" class="w-100 form-label">Author:</label>
                        <input required type="text" placeholder="Author" asp-for="Quote.Author" class="form-control" />
                        <span asp-validation-for="Quote.Author" class="invalid-feedback text-outline-black"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="reset" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" id="submitButton" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
    <!-- checkmark -->
    <symbol id="svg-check" fill="currentColor" viewBox="0 0 16 16">
        <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
    </symbol>

    <!-- info -->
    <symbol id="svg-info" fill="currentColor" viewBox="0 0 16 16">
        <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z" />
    </symbol>

    <!-- alert -->
    <symbol id="svg-alert" fill="currentColor" viewBox="0 0 16 16">
        <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
    </symbol>

    <!-- add -->
    <symbol id="svg-add" fill="green" viewBox="0 -960 960 960">
        <path d="M440-280h80v-160h160v-80H520v-160h-80v160H280v80h160v160Zm40 200q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z" />
    </symbol>
</svg>

<script>
    const editModal = document.getElementById('editModal');
    editModal.addEventListener('show.bs.modal', function (event) {
        const srcBtn = event.relatedTarget;

        editModal.querySelector('#Quote_QuoteId').value = srcBtn.getAttribute('data-bs-id');
        editModal.querySelector('#Quote_Quote').value = srcBtn.getAttribute('data-bs-quote');
        editModal.querySelector('#Quote_Author').value = srcBtn.getAttribute('data-bs-author');
        editModal.querySelector('#submitButton').textContent = srcBtn.getAttribute('data-bs-action');
    });
</script>

@functions {
    void Pagination()
    {
        <nav aria-label="Friend list pagination">
            @{
                int currentPage = Model.CurrentPage;
                int totalPages = Model.TotalPages;

                int listedPages = Math.Min(Model.DisplayedPages, totalPages);
                int backPages = (int)Math.Floor((listedPages - 1) * 0.5m);

                int firstPage = Math.Max(1, currentPage - backPages);
                int lastPage = Math.Min(totalPages, firstPage + (listedPages - 1));

                if (listedPages > 1)
                    firstPage = Math.Min(firstPage, lastPage - (listedPages - 1));
            }

            <ul class="pagination m-0">
                @{
                    StringBuilder uri = new($"{Model.Request.Path}?");

                    foreach (var part in Model.Request.Query)
                    {
                        if (part.Value == "" || part.Key == "currentPage")
                            continue;

                        uri.Append(part.Key)
                        .Append('=')
                        .Append(part.Value)
                        .Append('&');
                    }
                    uri.Append("page=");
                }

                <li class="@("page-item" + (currentPage <= 1 ? " disabled" : null))">
                    @if (currentPage > 1)
                    {
                        <a class="page-link" href="@(uri.ToString() + (currentPage-1))">Previous</a>
                    }
                    else
                    {
                        <a class="page-link">Previous</a>
                    }
                </li>

                @for (int i = firstPage; i <= lastPage; i++)
                {
                    <li class="@("page-item" + (i == currentPage ? " active" : null))">
                        <a class="page-link" href="@(uri.ToString() + i)">@i</a>
                    </li>
                }

                <li class="@("page-item" + (currentPage >= totalPages ? " disabled" : null))">
                    @if (currentPage < totalPages)
                    {
                        <a class="page-link" href="@(uri.ToString() + (currentPage+1))">Next</a>
                    }
                    else
                    {
                        <a class="page-link">Next</a>
                    }
                </li>
            </ul>
        </nav>
    }

    void QuoteCounter()
    {
        <div class="fs-6 me-2">
            Showing quotes
            @(int.Min(((Model.CurrentPage - 1) * Model.PageSize + 1), Model.TotalQuotes)
                )-@int.Min(Model.CurrentPage * Model.PageSize, Model.TotalQuotes)
            of
            @Model.TotalQuotes
        </div>
    }
}

@section scripts {
    <partial name="_ValidationScriptsPartial" />
}